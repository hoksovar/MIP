#include <stdio.h>
#include <unistd.h>

#define MAX_SIZE 200	

int riesenie_najdene = 0;	
int sirka, dlzka;	

int najdi_vchod_zhora ( char pole[][MAX_SIZE] ) {	
	int n;
	for( n = 0; n < sirka ; n++ ) {
		if( pole[0][n] == '.' )
			return n;	
	}
	return -1;
}

int najdi_vchod_zlava ( char pole[][MAX_SIZE] ) {	
	int n;
	for( n = 0; n < dlzka ; n++ ) {
		if( pole[n][0] == '.' )
			return n;	
	}
	return -1;
}

void vypis_riesenie ( char pole[][MAX_SIZE] ) {
	int n, m;
	for( n = 0; n < dlzka; n++ ) {	
		for( m = 0; m < sirka; m++ ) {	
			printf("%c", pole[n][m]);	
		}
		printf("\n");
	} 
}

void hladaj_cestu ( char pole[][MAX_SIZE], int x, int y ) {
		
	pole[y][x] = '*'; 
		
	if( x+1 >= sirka || y+1 >= dlzka ) {	
		riesenie_najdene = 1;
		vypis_riesenie( pole );		
		return;
	}
	
	if ( riesenie_najdene == 1 )	
		return;

	if( pole[y+1][x] == '.' )	
		hladaj_cestu ( pole, x, y+1 );
	if( y > 0 && pole[y-1][x] == '.' )
		hladaj_cestu ( pole, x, y-1 );
	if( pole[y][x+1] == '.' )
		hladaj_cestu ( pole, x+1, y );
	if( x > 0 && pole[y][x-1] == '.' )
		hladaj_cestu ( pole, x-1, y );
	pole[y][x] = '.';	
	return;
}

void najdi_riesenie ( char pole[][MAX_SIZE] ){
	int vchod = najdi_vchod_zhora( pole );	

	if( vchod != -1 ) {	
		hladaj_cestu( pole, vchod, 0 );
	}
	else { 
		vchod = najdi_vchod_zlava( pole );	
		if( vchod != -1 ) 
			hladaj_cestu( pole, 0, vchod ); 
		else {
			printf("Nenaslo vchod do bludiska!\n");
			return;
		}
	}

}



int main (int argc, char *argv[])
{
	char znak;
	char pole[MAX_SIZE][MAX_SIZE]; 
	int riadok = 0, stlpec = 0;
	
	while( read(STDIN_FILENO, &znak, 1) > 0) { 
		if( znak == '-' ) {	
			if( riesenie_najdene == 0 ) {
				dlzka = riadok;		
				najdi_riesenie( pole );
				if( riesenie_najdene == 0 ) {
					printf("Riesenie tohto bludiska nebolo najdene!\n");
					riesenie_najdene = 1;			
				}
				printf("----\n");
				riadok = 0;	
				stlpec = 0;	
				continue;			
			}
			else continue;
		}
		if( riesenie_najdene == 1 ) {	
			riesenie_najdene = 0;
			continue;
		}
		
		if( znak == '\n' ) {
			if( stlpec == 0 )
				continue;
			riadok = riadok + 1;		
			if( riadok >= MAX_SIZE ) {
				printf("Prekrocena maximalna veľkosť bludiska\n");
				return 0;
			}
			sirka = stlpec;		
			stlpec = 0;		
			continue;
		}	

		if( stlpec >= MAX_SIZE ) {
			printf("Prekrocena maximalna veľkost bludiska\n");
			return 0;
		}

		pole[riadok][stlpec] = znak;	
		stlpec = stlpec + 1;	
		continue;
	}
	dlzka = riadok;
	najdi_riesenie( pole );	
	if( riesenie_najdene == 0 ) 
		printf("Riesenie tohto bludiska nebolo najdene!\n");
	return 0;
}
